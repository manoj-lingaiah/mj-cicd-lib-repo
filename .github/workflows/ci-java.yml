name: CI Java Reusable Workflow

on:
  workflow_call:
    inputs:
      java-version:
        required: true
        type: string
      docker-image-name:
        required: true
        type: string
    secrets:
      SONAR_TOKEN:
        required: true
      SNYK_TOKEN:
        required: true

jobs:
  code-style-check:
    uses: ./.github/actions/codestyle-java
    with:
      java-version: ${{ inputs.java-version }}

  unit-tests:
    needs: code-style-check
    uses: ./.github/actions/unit-tests
    with:
      java-version: ${{ inputs.java-version }}

  sonar-scan:
    needs: unit-tests
    uses: ./.github/actions/sonar-scan
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  snyk-scan:
    needs: sonar-scan
    uses: ./.github/actions/snyk-scan
    secrets:
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build-docker:
    needs: [unit-tests, sonar-scan]
    if: needs.unit-tests.outputs.pass_rate > 80 && needs.sonar-scan.outputs.approved == 'true'
    uses: ./.github/actions/docker-build
    with:
      docker-image-name: ${{ inputs.docker-image-name }}
      sha: ${{ github.sha }}
  
